// automatically generated by Xtext
grammar sqlProgram.SqlDsl with org.eclipse.xtext.common.Terminals

import "http://www.example.org/sqlProgram" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

SqlProgram returns SqlProgram:
	{SqlProgram} (queries+=Queries ";")*;
	
Queries returns Queries:
	Selection | QuickSelection | Creation | Update | Insertion | Delete;

Objects returns Objects:
	Table | Column;

QuickSelection returns QuickSelection:
	{QuickSelection}
	method=EString 'FROM' 
		objects+=Table ("," objects+=Table)*
		(clauses+=Clause)*
	;

Selection returns Selection:
	{Selection}
	'SELECT' 'FROM' 
		objects+=Table ("," objects+=Table)*
		(clauses+=Clause)*
	;

Creation returns Creation:
	{Creation}
	'CREATE' (
		// table creation concrete syntax
		(
			type='TABLE' objects+=TableOnCreation
			(constaints+=Constaint ( "," constaints+=Constaint)*)?
		) |
		// index creation concrete syntax
		(
			type='INDEX' (name=EString)? 'ON' objects+=Table
		)	
	);
	
Update returns Update:
	{Update}
	'UPDATE' objects+=Table
	clauses+=Clause ( "," clauses+=Clause)*;

Insertion returns Insertion:
	{Insertion}
	'INSERT' 'INTO' objects+=Table
	'VALUES' '{' values+=Value ( "," values+=Value)*'}';

Delete returns Delete:
	{Delete}
	'DELETE' 'FROM' objects+=Table
	(clauses+=Clause ( "," clauses+=Clause)*)?;
	
EString returns ecore::EString:
	STRING | ID;

Table returns Table:
	{Table}
	name=EString
	'{'
		(columns+=Column ( "," columns+=Column)*)?
	'}';
	
TableOnCreation returns Table:
	{Table}
	name=EString
	'{'
		columns+=ColumnOnCreation ( "," columns+=ColumnOnCreation)*
	'}';
	
Column returns Column:
	{Column}
	name=EString //(type=EString)?
	//('constaints' '{' constaints+=Constaint ( "," constaints+=Constaint)* '}' )?
;
	
ColumnOnCreation returns Column:
	{Column}
	name=EString type=(
				'int' | 'float' | 'varchar(100)' | 'char(100)' | 'text' | 'date' |
				'INT' | 'FLOAT' | 'VARCHAR(100)' | 'CHAR(100)' | 'TEXT' | 'DATE'
	)
	(constaints+=ConstaintOnCreation)?
;

Constaint returns Constaint:
	'CONSTRAINT' body=ComplexString;

ConstaintOnCreation returns Constaint:
	body=ComplexString;
	
Clause returns Clause:
	name=EString body=ComplexString;

Value returns Value:
	{Value}
	'Value'
	'('
		(columnvalues+=ColumnValue ( "," columnvalues+=ColumnValue)*)?
	')';

ColumnValue returns ColumnValue:
	{ColumnValue} value=EString;
	
ComplexString returns ecore::EString:
	EString(('.')?('*')?('=')?('<')?('>')?EString)*('(' EString (',' EString)* ')')?
;
 
terminal SL_COMMENT:
    '--' !('\n'|'\r')* ('\r'? '\n')?;
	