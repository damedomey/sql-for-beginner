// automatically generated by Xtext
grammar sqlProgram.SqlDsl with org.eclipse.xtext.common.Terminals

import "http://www.example.org/sqlProgram" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

SqlProgram returns SqlProgram:
	{SqlProgram}
	'SqlProgram'
	'{'
		('queries' '{' queries+=Queries ( "," queries+=Queries)* '}' )?
	'}';

Queries returns Queries:
	Selection | Creation | Update | Insertion | Delete;

Objects returns Objects:
	Table | Column;







Selection returns Selection:
	{Selection}
	'Selection'
	'{'
		('objects' '{' objects+=Objects ( "," objects+=Objects)* '}' )?
		('clauses' '{' clauses+=Clause ( "," clauses+=Clause)* '}' )?
	'}';

Creation returns Creation:
	{Creation}
	'Creation'
	'{'
		('type' type=EString)?
		('objects' '{' objects+=Objects ( "," objects+=Objects)* '}' )?
		('constaints' '{' constaints+=Constaint ( "," constaints+=Constaint)* '}' )?
	'}';

Update returns Update:
	{Update}
	'Update'
	'{'
		('objects' '{' objects+=Objects ( "," objects+=Objects)* '}' )?
		('clauses' '{' clauses+=Clause ( "," clauses+=Clause)* '}' )?
	'}';

Insertion returns Insertion:
	{Insertion}
	'Insertion'
	'{'
		('objects' '{' objects+=Objects ( "," objects+=Objects)* '}' )?
		('values' '{' values+=Value ( "," values+=Value)* '}' )?
	'}';

Delete returns Delete:
	{Delete}
	'Delete'
	'{'
		('objects' '{' objects+=Objects ( "," objects+=Objects)* '}' )?
		('clauses' '{' clauses+=Clause ( "," clauses+=Clause)* '}' )?
	'}';

EString returns ecore::EString:
	STRING | ID;

Table returns Table:
	{Table}
	'Table'
	name=EString
	'{'
		('columns' '{' columns+=Column ( "," columns+=Column)* '}' )?
	'}';

Column returns Column:
	{Column}
	'Column'
	name=EString
	'{'
		('type' type=[Type|EString])?
	'}';

Type returns Type:
	{Type}
	'Type'
	name=EString;

Clause returns Clause:
	'Clause'
	name=EString
	'{'
		'body' body=EString
	'}';

Constaint returns Constaint:
	'Constaint'
	'{'
		'body' body=EString
	'}';

Value returns Value:
	{Value}
	'Value'
	'{'
		('columnvalues' '{' columnvalues+=ColumnValue ( "," columnvalues+=ColumnValue)* '}' )?
	'}';

ColumnValue returns ColumnValue:
	{ColumnValue}
	'ColumnValue'
	'{'
		('value' value=EString)?
	'}';
