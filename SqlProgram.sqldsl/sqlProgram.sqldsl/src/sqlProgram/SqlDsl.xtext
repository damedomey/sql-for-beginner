// automatically generated by Xtext
grammar sqlProgram.SqlDsl with org.eclipse.xtext.common.Terminals

import "http://www.example.org/sqlProgram" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

SqlProgram returns SqlProgram:
	{SqlProgram} (queries+=Queries ";")*;

Queries returns Queries:
	Selection | Creation | Update | Insertion | Delete;

Objects returns Objects:
	Table | Column;

Selection returns Selection:
	{Selection}
	'SELECT' 'FROM' 
		objects+=Table ("," objects+=Table)*
		(clauses+=Clause)*
	;

Creation returns Creation:
	{Creation}
	'CREATE' (
		// table creation concrete syntax
		(
			type='TABLE' objects+=Table
			(constaints+=Constaint ( "," constaints+=Constaint)*)?
		) |
		// index creation concrete syntax
		(
			type='INDEX' objects+=Table
		)	
	);

Update returns Update:
	{Update}
	'UPDATE' objects+=Table
	clauses+=Clause ( "," clauses+=Clause)*;

Insertion returns Insertion:
	{Insertion}
	'INSERT' 'INTO' objects+=Table
	values+=Value ( "," values+=Value)*;

Delete returns Delete:
	{Delete}
	'DELETE' 'FROM' objects+=Table
	(clauses+=Clause ( "," clauses+=Clause)*)?;

EString returns ecore::EString:
	STRING | ID;

Table returns Table:
	{Table}
	name=EString
	'{'
		(columns+=Column ( "," columns+=Column)*)?
	'}';

Column returns Column:
	{Column}
	name=EString (type=[Type|EString])?;

Type returns Type:
	{Type}
	name=(('int' | 'INT')| ('double' | 'DOUBLE') | ('float' | 'FLOAT') | ('date' | 'DATE')| EString);

Clause returns Clause:
	name=(
			'AND'|'OR'|'WHERE'|'SET'|'HAVING'|'LIMIT'|'OFFSET'|
			'and'|'or'|'where'|'set'|'having'|'limit'|'offset'
		)
	body=ComplexString;

Constaint returns Constaint:
	'CONSTRAINT' body=ComplexString;

Value returns Value:
	{Value}
	'Value'
	'('
		(columnvalues+=ColumnValue ( "," columnvalues+=ColumnValue)*)?
	')';

ColumnValue returns ColumnValue:
	{ColumnValue} value=EString;
	
ComplexString returns ecore::EString:
	EString(('.')?('*')?('=')?EString)*'()'?
;
