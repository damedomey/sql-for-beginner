/*
 * generated by Xtext 2.30.0.M3
 */
grammar InternalSqlDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package sqlProgram.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package sqlProgram.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import sqlProgram.services.SqlDslGrammarAccess;

}

@parser::members {

 	private SqlDslGrammarAccess grammarAccess;

    public InternalSqlDslParser(TokenStream input, SqlDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "SqlProgram";
   	}

   	@Override
   	protected SqlDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleSqlProgram
entryRuleSqlProgram returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSqlProgramRule()); }
	iv_ruleSqlProgram=ruleSqlProgram
	{ $current=$iv_ruleSqlProgram.current; }
	EOF;

// Rule SqlProgram
ruleSqlProgram returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSqlProgramAccess().getSqlProgramAction_0(),
					$current);
			}
		)
		otherlv_1='SqlProgram'
		{
			newLeafNode(otherlv_1, grammarAccess.getSqlProgramAccess().getSqlProgramKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getSqlProgramAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='queries'
			{
				newLeafNode(otherlv_3, grammarAccess.getSqlProgramAccess().getQueriesKeyword_3_0());
			}
			otherlv_4='{'
			{
				newLeafNode(otherlv_4, grammarAccess.getSqlProgramAccess().getLeftCurlyBracketKeyword_3_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSqlProgramAccess().getQueriesQueriesParserRuleCall_3_2_0());
					}
					lv_queries_5_0=ruleQueries
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSqlProgramRule());
						}
						add(
							$current,
							"queries",
							lv_queries_5_0,
							"sqlProgram.SqlDsl.Queries");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getSqlProgramAccess().getCommaKeyword_3_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSqlProgramAccess().getQueriesQueriesParserRuleCall_3_3_1_0());
						}
						lv_queries_7_0=ruleQueries
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSqlProgramRule());
							}
							add(
								$current,
								"queries",
								lv_queries_7_0,
								"sqlProgram.SqlDsl.Queries");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_8='}'
			{
				newLeafNode(otherlv_8, grammarAccess.getSqlProgramAccess().getRightCurlyBracketKeyword_3_4());
			}
		)?
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getSqlProgramAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleQueries
entryRuleQueries returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getQueriesRule()); }
	iv_ruleQueries=ruleQueries
	{ $current=$iv_ruleQueries.current; }
	EOF;

// Rule Queries
ruleQueries returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getQueriesAccess().getSelectionParserRuleCall_0());
		}
		this_Selection_0=ruleSelection
		{
			$current = $this_Selection_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getQueriesAccess().getCreationParserRuleCall_1());
		}
		this_Creation_1=ruleCreation
		{
			$current = $this_Creation_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getQueriesAccess().getUpdateParserRuleCall_2());
		}
		this_Update_2=ruleUpdate
		{
			$current = $this_Update_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getQueriesAccess().getInsertionParserRuleCall_3());
		}
		this_Insertion_3=ruleInsertion
		{
			$current = $this_Insertion_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getQueriesAccess().getDeleteParserRuleCall_4());
		}
		this_Delete_4=ruleDelete
		{
			$current = $this_Delete_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleObjects
entryRuleObjects returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getObjectsRule()); }
	iv_ruleObjects=ruleObjects
	{ $current=$iv_ruleObjects.current; }
	EOF;

// Rule Objects
ruleObjects returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getObjectsAccess().getTableParserRuleCall_0());
		}
		this_Table_0=ruleTable
		{
			$current = $this_Table_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getObjectsAccess().getColumnParserRuleCall_1());
		}
		this_Column_1=ruleColumn
		{
			$current = $this_Column_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSelection
entryRuleSelection returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSelectionRule()); }
	iv_ruleSelection=ruleSelection
	{ $current=$iv_ruleSelection.current; }
	EOF;

// Rule Selection
ruleSelection returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getSelectionAccess().getSelectionAction_0(),
					$current);
			}
		)
		otherlv_1='Selection'
		{
			newLeafNode(otherlv_1, grammarAccess.getSelectionAccess().getSelectionKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getSelectionAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='objects'
			{
				newLeafNode(otherlv_3, grammarAccess.getSelectionAccess().getObjectsKeyword_3_0());
			}
			otherlv_4='{'
			{
				newLeafNode(otherlv_4, grammarAccess.getSelectionAccess().getLeftCurlyBracketKeyword_3_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSelectionAccess().getObjectsObjectsParserRuleCall_3_2_0());
					}
					lv_objects_5_0=ruleObjects
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSelectionRule());
						}
						add(
							$current,
							"objects",
							lv_objects_5_0,
							"sqlProgram.SqlDsl.Objects");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getSelectionAccess().getCommaKeyword_3_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSelectionAccess().getObjectsObjectsParserRuleCall_3_3_1_0());
						}
						lv_objects_7_0=ruleObjects
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSelectionRule());
							}
							add(
								$current,
								"objects",
								lv_objects_7_0,
								"sqlProgram.SqlDsl.Objects");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_8='}'
			{
				newLeafNode(otherlv_8, grammarAccess.getSelectionAccess().getRightCurlyBracketKeyword_3_4());
			}
		)?
		(
			otherlv_9='clauses'
			{
				newLeafNode(otherlv_9, grammarAccess.getSelectionAccess().getClausesKeyword_4_0());
			}
			otherlv_10='{'
			{
				newLeafNode(otherlv_10, grammarAccess.getSelectionAccess().getLeftCurlyBracketKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSelectionAccess().getClausesClauseParserRuleCall_4_2_0());
					}
					lv_clauses_11_0=ruleClause
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSelectionRule());
						}
						add(
							$current,
							"clauses",
							lv_clauses_11_0,
							"sqlProgram.SqlDsl.Clause");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_12=','
				{
					newLeafNode(otherlv_12, grammarAccess.getSelectionAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSelectionAccess().getClausesClauseParserRuleCall_4_3_1_0());
						}
						lv_clauses_13_0=ruleClause
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSelectionRule());
							}
							add(
								$current,
								"clauses",
								lv_clauses_13_0,
								"sqlProgram.SqlDsl.Clause");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_14='}'
			{
				newLeafNode(otherlv_14, grammarAccess.getSelectionAccess().getRightCurlyBracketKeyword_4_4());
			}
		)?
		otherlv_15='}'
		{
			newLeafNode(otherlv_15, grammarAccess.getSelectionAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleCreation
entryRuleCreation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCreationRule()); }
	iv_ruleCreation=ruleCreation
	{ $current=$iv_ruleCreation.current; }
	EOF;

// Rule Creation
ruleCreation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCreationAccess().getCreationAction_0(),
					$current);
			}
		)
		otherlv_1='Creation'
		{
			newLeafNode(otherlv_1, grammarAccess.getCreationAccess().getCreationKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getCreationAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='type'
			{
				newLeafNode(otherlv_3, grammarAccess.getCreationAccess().getTypeKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCreationAccess().getTypeEStringParserRuleCall_3_1_0());
					}
					lv_type_4_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCreationRule());
						}
						set(
							$current,
							"type",
							lv_type_4_0,
							"sqlProgram.SqlDsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_5='objects'
			{
				newLeafNode(otherlv_5, grammarAccess.getCreationAccess().getObjectsKeyword_4_0());
			}
			otherlv_6='{'
			{
				newLeafNode(otherlv_6, grammarAccess.getCreationAccess().getLeftCurlyBracketKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCreationAccess().getObjectsObjectsParserRuleCall_4_2_0());
					}
					lv_objects_7_0=ruleObjects
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCreationRule());
						}
						add(
							$current,
							"objects",
							lv_objects_7_0,
							"sqlProgram.SqlDsl.Objects");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_8=','
				{
					newLeafNode(otherlv_8, grammarAccess.getCreationAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getCreationAccess().getObjectsObjectsParserRuleCall_4_3_1_0());
						}
						lv_objects_9_0=ruleObjects
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCreationRule());
							}
							add(
								$current,
								"objects",
								lv_objects_9_0,
								"sqlProgram.SqlDsl.Objects");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_10='}'
			{
				newLeafNode(otherlv_10, grammarAccess.getCreationAccess().getRightCurlyBracketKeyword_4_4());
			}
		)?
		(
			otherlv_11='constaints'
			{
				newLeafNode(otherlv_11, grammarAccess.getCreationAccess().getConstaintsKeyword_5_0());
			}
			otherlv_12='{'
			{
				newLeafNode(otherlv_12, grammarAccess.getCreationAccess().getLeftCurlyBracketKeyword_5_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getCreationAccess().getConstaintsConstaintParserRuleCall_5_2_0());
					}
					lv_constaints_13_0=ruleConstaint
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCreationRule());
						}
						add(
							$current,
							"constaints",
							lv_constaints_13_0,
							"sqlProgram.SqlDsl.Constaint");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_14=','
				{
					newLeafNode(otherlv_14, grammarAccess.getCreationAccess().getCommaKeyword_5_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getCreationAccess().getConstaintsConstaintParserRuleCall_5_3_1_0());
						}
						lv_constaints_15_0=ruleConstaint
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCreationRule());
							}
							add(
								$current,
								"constaints",
								lv_constaints_15_0,
								"sqlProgram.SqlDsl.Constaint");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_16='}'
			{
				newLeafNode(otherlv_16, grammarAccess.getCreationAccess().getRightCurlyBracketKeyword_5_4());
			}
		)?
		otherlv_17='}'
		{
			newLeafNode(otherlv_17, grammarAccess.getCreationAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleUpdate
entryRuleUpdate returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUpdateRule()); }
	iv_ruleUpdate=ruleUpdate
	{ $current=$iv_ruleUpdate.current; }
	EOF;

// Rule Update
ruleUpdate returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getUpdateAccess().getUpdateAction_0(),
					$current);
			}
		)
		otherlv_1='Update'
		{
			newLeafNode(otherlv_1, grammarAccess.getUpdateAccess().getUpdateKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getUpdateAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='objects'
			{
				newLeafNode(otherlv_3, grammarAccess.getUpdateAccess().getObjectsKeyword_3_0());
			}
			otherlv_4='{'
			{
				newLeafNode(otherlv_4, grammarAccess.getUpdateAccess().getLeftCurlyBracketKeyword_3_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getUpdateAccess().getObjectsObjectsParserRuleCall_3_2_0());
					}
					lv_objects_5_0=ruleObjects
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUpdateRule());
						}
						add(
							$current,
							"objects",
							lv_objects_5_0,
							"sqlProgram.SqlDsl.Objects");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getUpdateAccess().getCommaKeyword_3_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getUpdateAccess().getObjectsObjectsParserRuleCall_3_3_1_0());
						}
						lv_objects_7_0=ruleObjects
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getUpdateRule());
							}
							add(
								$current,
								"objects",
								lv_objects_7_0,
								"sqlProgram.SqlDsl.Objects");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_8='}'
			{
				newLeafNode(otherlv_8, grammarAccess.getUpdateAccess().getRightCurlyBracketKeyword_3_4());
			}
		)?
		(
			otherlv_9='clauses'
			{
				newLeafNode(otherlv_9, grammarAccess.getUpdateAccess().getClausesKeyword_4_0());
			}
			otherlv_10='{'
			{
				newLeafNode(otherlv_10, grammarAccess.getUpdateAccess().getLeftCurlyBracketKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getUpdateAccess().getClausesClauseParserRuleCall_4_2_0());
					}
					lv_clauses_11_0=ruleClause
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getUpdateRule());
						}
						add(
							$current,
							"clauses",
							lv_clauses_11_0,
							"sqlProgram.SqlDsl.Clause");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_12=','
				{
					newLeafNode(otherlv_12, grammarAccess.getUpdateAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getUpdateAccess().getClausesClauseParserRuleCall_4_3_1_0());
						}
						lv_clauses_13_0=ruleClause
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getUpdateRule());
							}
							add(
								$current,
								"clauses",
								lv_clauses_13_0,
								"sqlProgram.SqlDsl.Clause");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_14='}'
			{
				newLeafNode(otherlv_14, grammarAccess.getUpdateAccess().getRightCurlyBracketKeyword_4_4());
			}
		)?
		otherlv_15='}'
		{
			newLeafNode(otherlv_15, grammarAccess.getUpdateAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleInsertion
entryRuleInsertion returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInsertionRule()); }
	iv_ruleInsertion=ruleInsertion
	{ $current=$iv_ruleInsertion.current; }
	EOF;

// Rule Insertion
ruleInsertion returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getInsertionAccess().getInsertionAction_0(),
					$current);
			}
		)
		otherlv_1='Insertion'
		{
			newLeafNode(otherlv_1, grammarAccess.getInsertionAccess().getInsertionKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getInsertionAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='objects'
			{
				newLeafNode(otherlv_3, grammarAccess.getInsertionAccess().getObjectsKeyword_3_0());
			}
			otherlv_4='{'
			{
				newLeafNode(otherlv_4, grammarAccess.getInsertionAccess().getLeftCurlyBracketKeyword_3_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInsertionAccess().getObjectsObjectsParserRuleCall_3_2_0());
					}
					lv_objects_5_0=ruleObjects
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInsertionRule());
						}
						add(
							$current,
							"objects",
							lv_objects_5_0,
							"sqlProgram.SqlDsl.Objects");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getInsertionAccess().getCommaKeyword_3_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getInsertionAccess().getObjectsObjectsParserRuleCall_3_3_1_0());
						}
						lv_objects_7_0=ruleObjects
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getInsertionRule());
							}
							add(
								$current,
								"objects",
								lv_objects_7_0,
								"sqlProgram.SqlDsl.Objects");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_8='}'
			{
				newLeafNode(otherlv_8, grammarAccess.getInsertionAccess().getRightCurlyBracketKeyword_3_4());
			}
		)?
		(
			otherlv_9='values'
			{
				newLeafNode(otherlv_9, grammarAccess.getInsertionAccess().getValuesKeyword_4_0());
			}
			otherlv_10='{'
			{
				newLeafNode(otherlv_10, grammarAccess.getInsertionAccess().getLeftCurlyBracketKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getInsertionAccess().getValuesValueParserRuleCall_4_2_0());
					}
					lv_values_11_0=ruleValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getInsertionRule());
						}
						add(
							$current,
							"values",
							lv_values_11_0,
							"sqlProgram.SqlDsl.Value");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_12=','
				{
					newLeafNode(otherlv_12, grammarAccess.getInsertionAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getInsertionAccess().getValuesValueParserRuleCall_4_3_1_0());
						}
						lv_values_13_0=ruleValue
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getInsertionRule());
							}
							add(
								$current,
								"values",
								lv_values_13_0,
								"sqlProgram.SqlDsl.Value");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_14='}'
			{
				newLeafNode(otherlv_14, grammarAccess.getInsertionAccess().getRightCurlyBracketKeyword_4_4());
			}
		)?
		otherlv_15='}'
		{
			newLeafNode(otherlv_15, grammarAccess.getInsertionAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleDelete
entryRuleDelete returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeleteRule()); }
	iv_ruleDelete=ruleDelete
	{ $current=$iv_ruleDelete.current; }
	EOF;

// Rule Delete
ruleDelete returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDeleteAccess().getDeleteAction_0(),
					$current);
			}
		)
		otherlv_1='Delete'
		{
			newLeafNode(otherlv_1, grammarAccess.getDeleteAccess().getDeleteKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getDeleteAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='objects'
			{
				newLeafNode(otherlv_3, grammarAccess.getDeleteAccess().getObjectsKeyword_3_0());
			}
			otherlv_4='{'
			{
				newLeafNode(otherlv_4, grammarAccess.getDeleteAccess().getLeftCurlyBracketKeyword_3_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDeleteAccess().getObjectsObjectsParserRuleCall_3_2_0());
					}
					lv_objects_5_0=ruleObjects
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDeleteRule());
						}
						add(
							$current,
							"objects",
							lv_objects_5_0,
							"sqlProgram.SqlDsl.Objects");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getDeleteAccess().getCommaKeyword_3_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getDeleteAccess().getObjectsObjectsParserRuleCall_3_3_1_0());
						}
						lv_objects_7_0=ruleObjects
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDeleteRule());
							}
							add(
								$current,
								"objects",
								lv_objects_7_0,
								"sqlProgram.SqlDsl.Objects");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_8='}'
			{
				newLeafNode(otherlv_8, grammarAccess.getDeleteAccess().getRightCurlyBracketKeyword_3_4());
			}
		)?
		(
			otherlv_9='clauses'
			{
				newLeafNode(otherlv_9, grammarAccess.getDeleteAccess().getClausesKeyword_4_0());
			}
			otherlv_10='{'
			{
				newLeafNode(otherlv_10, grammarAccess.getDeleteAccess().getLeftCurlyBracketKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getDeleteAccess().getClausesClauseParserRuleCall_4_2_0());
					}
					lv_clauses_11_0=ruleClause
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDeleteRule());
						}
						add(
							$current,
							"clauses",
							lv_clauses_11_0,
							"sqlProgram.SqlDsl.Clause");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_12=','
				{
					newLeafNode(otherlv_12, grammarAccess.getDeleteAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getDeleteAccess().getClausesClauseParserRuleCall_4_3_1_0());
						}
						lv_clauses_13_0=ruleClause
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDeleteRule());
							}
							add(
								$current,
								"clauses",
								lv_clauses_13_0,
								"sqlProgram.SqlDsl.Clause");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_14='}'
			{
				newLeafNode(otherlv_14, grammarAccess.getDeleteAccess().getRightCurlyBracketKeyword_4_4());
			}
		)?
		otherlv_15='}'
		{
			newLeafNode(otherlv_15, grammarAccess.getDeleteAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleTable
entryRuleTable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTableRule()); }
	iv_ruleTable=ruleTable
	{ $current=$iv_ruleTable.current; }
	EOF;

// Rule Table
ruleTable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getTableAccess().getTableAction_0(),
					$current);
			}
		)
		otherlv_1='Table'
		{
			newLeafNode(otherlv_1, grammarAccess.getTableAccess().getTableKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTableAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTableRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"sqlProgram.SqlDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getTableAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			otherlv_4='columns'
			{
				newLeafNode(otherlv_4, grammarAccess.getTableAccess().getColumnsKeyword_4_0());
			}
			otherlv_5='{'
			{
				newLeafNode(otherlv_5, grammarAccess.getTableAccess().getLeftCurlyBracketKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTableAccess().getColumnsColumnParserRuleCall_4_2_0());
					}
					lv_columns_6_0=ruleColumn
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTableRule());
						}
						add(
							$current,
							"columns",
							lv_columns_6_0,
							"sqlProgram.SqlDsl.Column");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_7=','
				{
					newLeafNode(otherlv_7, grammarAccess.getTableAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getTableAccess().getColumnsColumnParserRuleCall_4_3_1_0());
						}
						lv_columns_8_0=ruleColumn
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTableRule());
							}
							add(
								$current,
								"columns",
								lv_columns_8_0,
								"sqlProgram.SqlDsl.Column");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_9='}'
			{
				newLeafNode(otherlv_9, grammarAccess.getTableAccess().getRightCurlyBracketKeyword_4_4());
			}
		)?
		otherlv_10='}'
		{
			newLeafNode(otherlv_10, grammarAccess.getTableAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleColumn
entryRuleColumn returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getColumnRule()); }
	iv_ruleColumn=ruleColumn
	{ $current=$iv_ruleColumn.current; }
	EOF;

// Rule Column
ruleColumn returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getColumnAccess().getColumnAction_0(),
					$current);
			}
		)
		otherlv_1='Column'
		{
			newLeafNode(otherlv_1, grammarAccess.getColumnAccess().getColumnKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getColumnAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getColumnRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"sqlProgram.SqlDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getColumnAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			otherlv_4='type'
			{
				newLeafNode(otherlv_4, grammarAccess.getColumnAccess().getTypeKeyword_4_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getColumnRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getColumnAccess().getTypeTypeCrossReference_4_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getColumnAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleClause
entryRuleClause returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getClauseRule()); }
	iv_ruleClause=ruleClause
	{ $current=$iv_ruleClause.current; }
	EOF;

// Rule Clause
ruleClause returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Clause'
		{
			newLeafNode(otherlv_0, grammarAccess.getClauseAccess().getClauseKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getClauseAccess().getNameEStringParserRuleCall_1_0());
				}
				lv_name_1_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClauseRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"sqlProgram.SqlDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getClauseAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='body'
		{
			newLeafNode(otherlv_3, grammarAccess.getClauseAccess().getBodyKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getClauseAccess().getBodyEStringParserRuleCall_4_0());
				}
				lv_body_4_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getClauseRule());
					}
					set(
						$current,
						"body",
						lv_body_4_0,
						"sqlProgram.SqlDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getClauseAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleConstaint
entryRuleConstaint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstaintRule()); }
	iv_ruleConstaint=ruleConstaint
	{ $current=$iv_ruleConstaint.current; }
	EOF;

// Rule Constaint
ruleConstaint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Constaint'
		{
			newLeafNode(otherlv_0, grammarAccess.getConstaintAccess().getConstaintKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getConstaintAccess().getLeftCurlyBracketKeyword_1());
		}
		otherlv_2='body'
		{
			newLeafNode(otherlv_2, grammarAccess.getConstaintAccess().getBodyKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConstaintAccess().getBodyEStringParserRuleCall_3_0());
				}
				lv_body_3_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConstaintRule());
					}
					set(
						$current,
						"body",
						lv_body_3_0,
						"sqlProgram.SqlDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getConstaintAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleValue
entryRuleValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getValueRule()); }
	iv_ruleValue=ruleValue
	{ $current=$iv_ruleValue.current; }
	EOF;

// Rule Value
ruleValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getValueAccess().getValueAction_0(),
					$current);
			}
		)
		otherlv_1='Value'
		{
			newLeafNode(otherlv_1, grammarAccess.getValueAccess().getValueKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getValueAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='columnvalues'
			{
				newLeafNode(otherlv_3, grammarAccess.getValueAccess().getColumnvaluesKeyword_3_0());
			}
			otherlv_4='{'
			{
				newLeafNode(otherlv_4, grammarAccess.getValueAccess().getLeftCurlyBracketKeyword_3_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getValueAccess().getColumnvaluesColumnValueParserRuleCall_3_2_0());
					}
					lv_columnvalues_5_0=ruleColumnValue
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getValueRule());
						}
						add(
							$current,
							"columnvalues",
							lv_columnvalues_5_0,
							"sqlProgram.SqlDsl.ColumnValue");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getValueAccess().getCommaKeyword_3_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getValueAccess().getColumnvaluesColumnValueParserRuleCall_3_3_1_0());
						}
						lv_columnvalues_7_0=ruleColumnValue
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getValueRule());
							}
							add(
								$current,
								"columnvalues",
								lv_columnvalues_7_0,
								"sqlProgram.SqlDsl.ColumnValue");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_8='}'
			{
				newLeafNode(otherlv_8, grammarAccess.getValueAccess().getRightCurlyBracketKeyword_3_4());
			}
		)?
		otherlv_9='}'
		{
			newLeafNode(otherlv_9, grammarAccess.getValueAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleColumnValue
entryRuleColumnValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getColumnValueRule()); }
	iv_ruleColumnValue=ruleColumnValue
	{ $current=$iv_ruleColumnValue.current; }
	EOF;

// Rule ColumnValue
ruleColumnValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getColumnValueAccess().getColumnValueAction_0(),
					$current);
			}
		)
		otherlv_1='ColumnValue'
		{
			newLeafNode(otherlv_1, grammarAccess.getColumnValueAccess().getColumnValueKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getColumnValueAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			otherlv_3='value'
			{
				newLeafNode(otherlv_3, grammarAccess.getColumnValueAccess().getValueKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getColumnValueAccess().getValueEStringParserRuleCall_3_1_0());
					}
					lv_value_4_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getColumnValueRule());
						}
						set(
							$current,
							"value",
							lv_value_4_0,
							"sqlProgram.SqlDsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getColumnValueAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
