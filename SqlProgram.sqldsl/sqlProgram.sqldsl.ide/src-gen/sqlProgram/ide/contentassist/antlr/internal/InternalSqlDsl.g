/*
 * generated by Xtext 2.30.0.M3
 */
grammar InternalSqlDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package sqlProgram.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package sqlProgram.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import sqlProgram.services.SqlDslGrammarAccess;

}
@parser::members {
	private SqlDslGrammarAccess grammarAccess;

	public void setGrammarAccess(SqlDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleSqlProgram
entryRuleSqlProgram
:
{ before(grammarAccess.getSqlProgramRule()); }
	 ruleSqlProgram
{ after(grammarAccess.getSqlProgramRule()); } 
	 EOF 
;

// Rule SqlProgram
ruleSqlProgram 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSqlProgramAccess().getGroup()); }
		(rule__SqlProgram__Group__0)
		{ after(grammarAccess.getSqlProgramAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQueries
entryRuleQueries
:
{ before(grammarAccess.getQueriesRule()); }
	 ruleQueries
{ after(grammarAccess.getQueriesRule()); } 
	 EOF 
;

// Rule Queries
ruleQueries 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQueriesAccess().getAlternatives()); }
		(rule__Queries__Alternatives)
		{ after(grammarAccess.getQueriesAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSelection
entryRuleSelection
:
{ before(grammarAccess.getSelectionRule()); }
	 ruleSelection
{ after(grammarAccess.getSelectionRule()); } 
	 EOF 
;

// Rule Selection
ruleSelection 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSelectionAccess().getGroup()); }
		(rule__Selection__Group__0)
		{ after(grammarAccess.getSelectionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCreation
entryRuleCreation
:
{ before(grammarAccess.getCreationRule()); }
	 ruleCreation
{ after(grammarAccess.getCreationRule()); } 
	 EOF 
;

// Rule Creation
ruleCreation 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCreationAccess().getGroup()); }
		(rule__Creation__Group__0)
		{ after(grammarAccess.getCreationAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleUpdate
entryRuleUpdate
:
{ before(grammarAccess.getUpdateRule()); }
	 ruleUpdate
{ after(grammarAccess.getUpdateRule()); } 
	 EOF 
;

// Rule Update
ruleUpdate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getUpdateAccess().getGroup()); }
		(rule__Update__Group__0)
		{ after(grammarAccess.getUpdateAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInsertion
entryRuleInsertion
:
{ before(grammarAccess.getInsertionRule()); }
	 ruleInsertion
{ after(grammarAccess.getInsertionRule()); } 
	 EOF 
;

// Rule Insertion
ruleInsertion 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInsertionAccess().getGroup()); }
		(rule__Insertion__Group__0)
		{ after(grammarAccess.getInsertionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDelete
entryRuleDelete
:
{ before(grammarAccess.getDeleteRule()); }
	 ruleDelete
{ after(grammarAccess.getDeleteRule()); } 
	 EOF 
;

// Rule Delete
ruleDelete 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDeleteAccess().getGroup()); }
		(rule__Delete__Group__0)
		{ after(grammarAccess.getDeleteAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEString
entryRuleEString
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEStringAccess().getAlternatives()); }
		(rule__EString__Alternatives)
		{ after(grammarAccess.getEStringAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTable
entryRuleTable
:
{ before(grammarAccess.getTableRule()); }
	 ruleTable
{ after(grammarAccess.getTableRule()); } 
	 EOF 
;

// Rule Table
ruleTable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTableAccess().getGroup()); }
		(rule__Table__Group__0)
		{ after(grammarAccess.getTableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleColumn
entryRuleColumn
:
{ before(grammarAccess.getColumnRule()); }
	 ruleColumn
{ after(grammarAccess.getColumnRule()); } 
	 EOF 
;

// Rule Column
ruleColumn 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getColumnAccess().getGroup()); }
		(rule__Column__Group__0)
		{ after(grammarAccess.getColumnAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClause
entryRuleClause
:
{ before(grammarAccess.getClauseRule()); }
	 ruleClause
{ after(grammarAccess.getClauseRule()); } 
	 EOF 
;

// Rule Clause
ruleClause 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClauseAccess().getGroup()); }
		(rule__Clause__Group__0)
		{ after(grammarAccess.getClauseAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstaint
entryRuleConstaint
:
{ before(grammarAccess.getConstaintRule()); }
	 ruleConstaint
{ after(grammarAccess.getConstaintRule()); } 
	 EOF 
;

// Rule Constaint
ruleConstaint 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstaintAccess().getGroup()); }
		(rule__Constaint__Group__0)
		{ after(grammarAccess.getConstaintAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleValue
entryRuleValue
:
{ before(grammarAccess.getValueRule()); }
	 ruleValue
{ after(grammarAccess.getValueRule()); } 
	 EOF 
;

// Rule Value
ruleValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getValueAccess().getGroup()); }
		(rule__Value__Group__0)
		{ after(grammarAccess.getValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleColumnValue
entryRuleColumnValue
:
{ before(grammarAccess.getColumnValueRule()); }
	 ruleColumnValue
{ after(grammarAccess.getColumnValueRule()); } 
	 EOF 
;

// Rule ColumnValue
ruleColumnValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getColumnValueAccess().getGroup()); }
		(rule__ColumnValue__Group__0)
		{ after(grammarAccess.getColumnValueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComplexString
entryRuleComplexString
:
{ before(grammarAccess.getComplexStringRule()); }
	 ruleComplexString
{ after(grammarAccess.getComplexStringRule()); } 
	 EOF 
;

// Rule ComplexString
ruleComplexString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComplexStringAccess().getGroup()); }
		(rule__ComplexString__Group__0)
		{ after(grammarAccess.getComplexStringAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Queries__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getQueriesAccess().getSelectionParserRuleCall_0()); }
		ruleSelection
		{ after(grammarAccess.getQueriesAccess().getSelectionParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getQueriesAccess().getCreationParserRuleCall_1()); }
		ruleCreation
		{ after(grammarAccess.getQueriesAccess().getCreationParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getQueriesAccess().getUpdateParserRuleCall_2()); }
		ruleUpdate
		{ after(grammarAccess.getQueriesAccess().getUpdateParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getQueriesAccess().getInsertionParserRuleCall_3()); }
		ruleInsertion
		{ after(grammarAccess.getQueriesAccess().getInsertionParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getQueriesAccess().getDeleteParserRuleCall_4()); }
		ruleDelete
		{ after(grammarAccess.getQueriesAccess().getDeleteParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Creation__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreationAccess().getGroup_2_0()); }
		(rule__Creation__Group_2_0__0)
		{ after(grammarAccess.getCreationAccess().getGroup_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getCreationAccess().getGroup_2_1()); }
		(rule__Creation__Group_2_1__0)
		{ after(grammarAccess.getCreationAccess().getGroup_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
		RULE_ID
		{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__NameAlternatives_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClauseAccess().getNameANDKeyword_0_0_0()); }
		'AND'
		{ after(grammarAccess.getClauseAccess().getNameANDKeyword_0_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getClauseAccess().getNameORKeyword_0_0_1()); }
		'OR'
		{ after(grammarAccess.getClauseAccess().getNameORKeyword_0_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getClauseAccess().getNameWHEREKeyword_0_0_2()); }
		'WHERE'
		{ after(grammarAccess.getClauseAccess().getNameWHEREKeyword_0_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getClauseAccess().getNameSETKeyword_0_0_3()); }
		'SET'
		{ after(grammarAccess.getClauseAccess().getNameSETKeyword_0_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getClauseAccess().getNameHAVINGKeyword_0_0_4()); }
		'HAVING'
		{ after(grammarAccess.getClauseAccess().getNameHAVINGKeyword_0_0_4()); }
	)
	|
	(
		{ before(grammarAccess.getClauseAccess().getNameLIMITKeyword_0_0_5()); }
		'LIMIT'
		{ after(grammarAccess.getClauseAccess().getNameLIMITKeyword_0_0_5()); }
	)
	|
	(
		{ before(grammarAccess.getClauseAccess().getNameOFFSETKeyword_0_0_6()); }
		'OFFSET'
		{ after(grammarAccess.getClauseAccess().getNameOFFSETKeyword_0_0_6()); }
	)
	|
	(
		{ before(grammarAccess.getClauseAccess().getNameAndKeyword_0_0_7()); }
		'and'
		{ after(grammarAccess.getClauseAccess().getNameAndKeyword_0_0_7()); }
	)
	|
	(
		{ before(grammarAccess.getClauseAccess().getNameOrKeyword_0_0_8()); }
		'or'
		{ after(grammarAccess.getClauseAccess().getNameOrKeyword_0_0_8()); }
	)
	|
	(
		{ before(grammarAccess.getClauseAccess().getNameWhereKeyword_0_0_9()); }
		'where'
		{ after(grammarAccess.getClauseAccess().getNameWhereKeyword_0_0_9()); }
	)
	|
	(
		{ before(grammarAccess.getClauseAccess().getNameSetKeyword_0_0_10()); }
		'set'
		{ after(grammarAccess.getClauseAccess().getNameSetKeyword_0_0_10()); }
	)
	|
	(
		{ before(grammarAccess.getClauseAccess().getNameHavingKeyword_0_0_11()); }
		'having'
		{ after(grammarAccess.getClauseAccess().getNameHavingKeyword_0_0_11()); }
	)
	|
	(
		{ before(grammarAccess.getClauseAccess().getNameLimitKeyword_0_0_12()); }
		'limit'
		{ after(grammarAccess.getClauseAccess().getNameLimitKeyword_0_0_12()); }
	)
	|
	(
		{ before(grammarAccess.getClauseAccess().getNameOffsetKeyword_0_0_13()); }
		'offset'
		{ after(grammarAccess.getClauseAccess().getNameOffsetKeyword_0_0_13()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SqlProgram__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SqlProgram__Group__0__Impl
	rule__SqlProgram__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SqlProgram__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSqlProgramAccess().getSqlProgramAction_0()); }
	()
	{ after(grammarAccess.getSqlProgramAccess().getSqlProgramAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SqlProgram__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SqlProgram__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SqlProgram__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSqlProgramAccess().getGroup_1()); }
	(rule__SqlProgram__Group_1__0)*
	{ after(grammarAccess.getSqlProgramAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SqlProgram__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SqlProgram__Group_1__0__Impl
	rule__SqlProgram__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SqlProgram__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSqlProgramAccess().getQueriesAssignment_1_0()); }
	(rule__SqlProgram__QueriesAssignment_1_0)
	{ after(grammarAccess.getSqlProgramAccess().getQueriesAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SqlProgram__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SqlProgram__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SqlProgram__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSqlProgramAccess().getSemicolonKeyword_1_1()); }
	';'
	{ after(grammarAccess.getSqlProgramAccess().getSemicolonKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Selection__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selection__Group__0__Impl
	rule__Selection__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectionAccess().getSelectionAction_0()); }
	()
	{ after(grammarAccess.getSelectionAccess().getSelectionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selection__Group__1__Impl
	rule__Selection__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectionAccess().getSELECTKeyword_1()); }
	'SELECT'
	{ after(grammarAccess.getSelectionAccess().getSELECTKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selection__Group__2__Impl
	rule__Selection__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectionAccess().getFROMKeyword_2()); }
	'FROM'
	{ after(grammarAccess.getSelectionAccess().getFROMKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selection__Group__3__Impl
	rule__Selection__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectionAccess().getObjectsAssignment_3()); }
	(rule__Selection__ObjectsAssignment_3)
	{ after(grammarAccess.getSelectionAccess().getObjectsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selection__Group__4__Impl
	rule__Selection__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectionAccess().getGroup_4()); }
	(rule__Selection__Group_4__0)*
	{ after(grammarAccess.getSelectionAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selection__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectionAccess().getClausesAssignment_5()); }
	(rule__Selection__ClausesAssignment_5)*
	{ after(grammarAccess.getSelectionAccess().getClausesAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Selection__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selection__Group_4__0__Impl
	rule__Selection__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectionAccess().getCommaKeyword_4_0()); }
	','
	{ after(grammarAccess.getSelectionAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Selection__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectionAccess().getObjectsAssignment_4_1()); }
	(rule__Selection__ObjectsAssignment_4_1)
	{ after(grammarAccess.getSelectionAccess().getObjectsAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Creation__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Creation__Group__0__Impl
	rule__Creation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Creation__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreationAccess().getCreationAction_0()); }
	()
	{ after(grammarAccess.getCreationAccess().getCreationAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Creation__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Creation__Group__1__Impl
	rule__Creation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Creation__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreationAccess().getCREATEKeyword_1()); }
	'CREATE'
	{ after(grammarAccess.getCreationAccess().getCREATEKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Creation__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Creation__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Creation__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreationAccess().getAlternatives_2()); }
	(rule__Creation__Alternatives_2)
	{ after(grammarAccess.getCreationAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Creation__Group_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Creation__Group_2_0__0__Impl
	rule__Creation__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Creation__Group_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreationAccess().getTypeAssignment_2_0_0()); }
	(rule__Creation__TypeAssignment_2_0_0)
	{ after(grammarAccess.getCreationAccess().getTypeAssignment_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Creation__Group_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Creation__Group_2_0__1__Impl
	rule__Creation__Group_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Creation__Group_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreationAccess().getObjectsAssignment_2_0_1()); }
	(rule__Creation__ObjectsAssignment_2_0_1)
	{ after(grammarAccess.getCreationAccess().getObjectsAssignment_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Creation__Group_2_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Creation__Group_2_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Creation__Group_2_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreationAccess().getGroup_2_0_2()); }
	(rule__Creation__Group_2_0_2__0)?
	{ after(grammarAccess.getCreationAccess().getGroup_2_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Creation__Group_2_0_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Creation__Group_2_0_2__0__Impl
	rule__Creation__Group_2_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Creation__Group_2_0_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreationAccess().getConstaintsAssignment_2_0_2_0()); }
	(rule__Creation__ConstaintsAssignment_2_0_2_0)
	{ after(grammarAccess.getCreationAccess().getConstaintsAssignment_2_0_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Creation__Group_2_0_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Creation__Group_2_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Creation__Group_2_0_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreationAccess().getGroup_2_0_2_1()); }
	(rule__Creation__Group_2_0_2_1__0)*
	{ after(grammarAccess.getCreationAccess().getGroup_2_0_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Creation__Group_2_0_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Creation__Group_2_0_2_1__0__Impl
	rule__Creation__Group_2_0_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Creation__Group_2_0_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreationAccess().getCommaKeyword_2_0_2_1_0()); }
	','
	{ after(grammarAccess.getCreationAccess().getCommaKeyword_2_0_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Creation__Group_2_0_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Creation__Group_2_0_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Creation__Group_2_0_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreationAccess().getConstaintsAssignment_2_0_2_1_1()); }
	(rule__Creation__ConstaintsAssignment_2_0_2_1_1)
	{ after(grammarAccess.getCreationAccess().getConstaintsAssignment_2_0_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Creation__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Creation__Group_2_1__0__Impl
	rule__Creation__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Creation__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreationAccess().getTypeAssignment_2_1_0()); }
	(rule__Creation__TypeAssignment_2_1_0)
	{ after(grammarAccess.getCreationAccess().getTypeAssignment_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Creation__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Creation__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Creation__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCreationAccess().getObjectsAssignment_2_1_1()); }
	(rule__Creation__ObjectsAssignment_2_1_1)
	{ after(grammarAccess.getCreationAccess().getObjectsAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Update__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Update__Group__0__Impl
	rule__Update__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateAccess().getUpdateAction_0()); }
	()
	{ after(grammarAccess.getUpdateAccess().getUpdateAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Update__Group__1__Impl
	rule__Update__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateAccess().getUPDATEKeyword_1()); }
	'UPDATE'
	{ after(grammarAccess.getUpdateAccess().getUPDATEKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Update__Group__2__Impl
	rule__Update__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateAccess().getObjectsAssignment_2()); }
	(rule__Update__ObjectsAssignment_2)
	{ after(grammarAccess.getUpdateAccess().getObjectsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Update__Group__3__Impl
	rule__Update__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateAccess().getClausesAssignment_3()); }
	(rule__Update__ClausesAssignment_3)
	{ after(grammarAccess.getUpdateAccess().getClausesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Update__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateAccess().getGroup_4()); }
	(rule__Update__Group_4__0)*
	{ after(grammarAccess.getUpdateAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Update__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Update__Group_4__0__Impl
	rule__Update__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateAccess().getCommaKeyword_4_0()); }
	','
	{ after(grammarAccess.getUpdateAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Update__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getUpdateAccess().getClausesAssignment_4_1()); }
	(rule__Update__ClausesAssignment_4_1)
	{ after(grammarAccess.getUpdateAccess().getClausesAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Insertion__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Insertion__Group__0__Impl
	rule__Insertion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Insertion__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertionAccess().getInsertionAction_0()); }
	()
	{ after(grammarAccess.getInsertionAccess().getInsertionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Insertion__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Insertion__Group__1__Impl
	rule__Insertion__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Insertion__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertionAccess().getINSERTKeyword_1()); }
	'INSERT'
	{ after(grammarAccess.getInsertionAccess().getINSERTKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Insertion__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Insertion__Group__2__Impl
	rule__Insertion__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Insertion__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertionAccess().getINTOKeyword_2()); }
	'INTO'
	{ after(grammarAccess.getInsertionAccess().getINTOKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Insertion__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Insertion__Group__3__Impl
	rule__Insertion__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Insertion__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertionAccess().getObjectsAssignment_3()); }
	(rule__Insertion__ObjectsAssignment_3)
	{ after(grammarAccess.getInsertionAccess().getObjectsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Insertion__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Insertion__Group__4__Impl
	rule__Insertion__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Insertion__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertionAccess().getValuesAssignment_4()); }
	(rule__Insertion__ValuesAssignment_4)
	{ after(grammarAccess.getInsertionAccess().getValuesAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Insertion__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Insertion__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Insertion__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertionAccess().getGroup_5()); }
	(rule__Insertion__Group_5__0)*
	{ after(grammarAccess.getInsertionAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Insertion__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Insertion__Group_5__0__Impl
	rule__Insertion__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Insertion__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertionAccess().getCommaKeyword_5_0()); }
	','
	{ after(grammarAccess.getInsertionAccess().getCommaKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Insertion__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Insertion__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Insertion__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInsertionAccess().getValuesAssignment_5_1()); }
	(rule__Insertion__ValuesAssignment_5_1)
	{ after(grammarAccess.getInsertionAccess().getValuesAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Delete__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Delete__Group__0__Impl
	rule__Delete__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteAccess().getDeleteAction_0()); }
	()
	{ after(grammarAccess.getDeleteAccess().getDeleteAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Delete__Group__1__Impl
	rule__Delete__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteAccess().getDELETEKeyword_1()); }
	'DELETE'
	{ after(grammarAccess.getDeleteAccess().getDELETEKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Delete__Group__2__Impl
	rule__Delete__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteAccess().getFROMKeyword_2()); }
	'FROM'
	{ after(grammarAccess.getDeleteAccess().getFROMKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Delete__Group__3__Impl
	rule__Delete__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteAccess().getObjectsAssignment_3()); }
	(rule__Delete__ObjectsAssignment_3)
	{ after(grammarAccess.getDeleteAccess().getObjectsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Delete__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteAccess().getGroup_4()); }
	(rule__Delete__Group_4__0)?
	{ after(grammarAccess.getDeleteAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Delete__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Delete__Group_4__0__Impl
	rule__Delete__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteAccess().getClausesAssignment_4_0()); }
	(rule__Delete__ClausesAssignment_4_0)
	{ after(grammarAccess.getDeleteAccess().getClausesAssignment_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Delete__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteAccess().getGroup_4_1()); }
	(rule__Delete__Group_4_1__0)*
	{ after(grammarAccess.getDeleteAccess().getGroup_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Delete__Group_4_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Delete__Group_4_1__0__Impl
	rule__Delete__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group_4_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteAccess().getCommaKeyword_4_1_0()); }
	','
	{ after(grammarAccess.getDeleteAccess().getCommaKeyword_4_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group_4_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Delete__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__Group_4_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDeleteAccess().getClausesAssignment_4_1_1()); }
	(rule__Delete__ClausesAssignment_4_1_1)
	{ after(grammarAccess.getDeleteAccess().getClausesAssignment_4_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Table__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__0__Impl
	rule__Table__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getTableAction_0()); }
	()
	{ after(grammarAccess.getTableAccess().getTableAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__1__Impl
	rule__Table__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getNameAssignment_1()); }
	(rule__Table__NameAssignment_1)
	{ after(grammarAccess.getTableAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__2__Impl
	rule__Table__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getTableAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__3__Impl
	rule__Table__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getGroup_3()); }
	(rule__Table__Group_3__0)?
	{ after(grammarAccess.getTableAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getTableAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Table__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group_3__0__Impl
	rule__Table__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getColumnsAssignment_3_0()); }
	(rule__Table__ColumnsAssignment_3_0)
	{ after(grammarAccess.getTableAccess().getColumnsAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getGroup_3_1()); }
	(rule__Table__Group_3_1__0)*
	{ after(grammarAccess.getTableAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Table__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group_3_1__0__Impl
	rule__Table__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getCommaKeyword_3_1_0()); }
	','
	{ after(grammarAccess.getTableAccess().getCommaKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getColumnsAssignment_3_1_1()); }
	(rule__Table__ColumnsAssignment_3_1_1)
	{ after(grammarAccess.getTableAccess().getColumnsAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Column__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Column__Group__0__Impl
	rule__Column__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnAccess().getColumnAction_0()); }
	()
	{ after(grammarAccess.getColumnAccess().getColumnAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Column__Group__1__Impl
	rule__Column__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnAccess().getNameAssignment_1()); }
	(rule__Column__NameAssignment_1)
	{ after(grammarAccess.getColumnAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Column__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnAccess().getTypeAssignment_2()); }
	(rule__Column__TypeAssignment_2)?
	{ after(grammarAccess.getColumnAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Clause__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Clause__Group__0__Impl
	rule__Clause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClauseAccess().getNameAssignment_0()); }
	(rule__Clause__NameAssignment_0)
	{ after(grammarAccess.getClauseAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Clause__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClauseAccess().getBodyAssignment_1()); }
	(rule__Clause__BodyAssignment_1)
	{ after(grammarAccess.getClauseAccess().getBodyAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Constaint__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constaint__Group__0__Impl
	rule__Constaint__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constaint__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstaintAccess().getCONSTRAINTKeyword_0()); }
	'CONSTRAINT'
	{ after(grammarAccess.getConstaintAccess().getCONSTRAINTKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constaint__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Constaint__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constaint__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConstaintAccess().getBodyAssignment_1()); }
	(rule__Constaint__BodyAssignment_1)
	{ after(grammarAccess.getConstaintAccess().getBodyAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Value__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Value__Group__0__Impl
	rule__Value__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueAccess().getValueAction_0()); }
	()
	{ after(grammarAccess.getValueAccess().getValueAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Value__Group__1__Impl
	rule__Value__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueAccess().getValueKeyword_1()); }
	'Value'
	{ after(grammarAccess.getValueAccess().getValueKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Value__Group__2__Impl
	rule__Value__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getValueAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Value__Group__3__Impl
	rule__Value__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueAccess().getGroup_3()); }
	(rule__Value__Group_3__0)?
	{ after(grammarAccess.getValueAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Value__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getValueAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Value__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Value__Group_3__0__Impl
	rule__Value__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueAccess().getColumnvaluesAssignment_3_0()); }
	(rule__Value__ColumnvaluesAssignment_3_0)
	{ after(grammarAccess.getValueAccess().getColumnvaluesAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Value__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueAccess().getGroup_3_1()); }
	(rule__Value__Group_3_1__0)*
	{ after(grammarAccess.getValueAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Value__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Value__Group_3_1__0__Impl
	rule__Value__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueAccess().getCommaKeyword_3_1_0()); }
	','
	{ after(grammarAccess.getValueAccess().getCommaKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Value__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getValueAccess().getColumnvaluesAssignment_3_1_1()); }
	(rule__Value__ColumnvaluesAssignment_3_1_1)
	{ after(grammarAccess.getValueAccess().getColumnvaluesAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ColumnValue__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColumnValue__Group__0__Impl
	rule__ColumnValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnValue__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnValueAccess().getColumnValueAction_0()); }
	()
	{ after(grammarAccess.getColumnValueAccess().getColumnValueAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnValue__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColumnValue__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnValue__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnValueAccess().getValueAssignment_1()); }
	(rule__ColumnValue__ValueAssignment_1)
	{ after(grammarAccess.getColumnValueAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComplexString__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComplexString__Group__0__Impl
	rule__ComplexString__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexString__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComplexStringAccess().getEStringParserRuleCall_0()); }
	ruleEString
	{ after(grammarAccess.getComplexStringAccess().getEStringParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexString__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComplexString__Group__1__Impl
	rule__ComplexString__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexString__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComplexStringAccess().getGroup_1()); }
	(rule__ComplexString__Group_1__0)*
	{ after(grammarAccess.getComplexStringAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexString__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComplexString__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexString__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComplexStringAccess().getLeftParenthesisRightParenthesisKeyword_2()); }
	('()')?
	{ after(grammarAccess.getComplexStringAccess().getLeftParenthesisRightParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComplexString__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComplexString__Group_1__0__Impl
	rule__ComplexString__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexString__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComplexStringAccess().getFullStopKeyword_1_0()); }
	('.')?
	{ after(grammarAccess.getComplexStringAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexString__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComplexString__Group_1__1__Impl
	rule__ComplexString__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexString__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComplexStringAccess().getAsteriskKeyword_1_1()); }
	('*')?
	{ after(grammarAccess.getComplexStringAccess().getAsteriskKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexString__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComplexString__Group_1__2__Impl
	rule__ComplexString__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexString__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComplexStringAccess().getEqualsSignKeyword_1_2()); }
	('=')?
	{ after(grammarAccess.getComplexStringAccess().getEqualsSignKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexString__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComplexString__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComplexString__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComplexStringAccess().getEStringParserRuleCall_1_3()); }
	ruleEString
	{ after(grammarAccess.getComplexStringAccess().getEStringParserRuleCall_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SqlProgram__QueriesAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSqlProgramAccess().getQueriesQueriesParserRuleCall_1_0_0()); }
		ruleQueries
		{ after(grammarAccess.getSqlProgramAccess().getQueriesQueriesParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection__ObjectsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectionAccess().getObjectsTableParserRuleCall_3_0()); }
		ruleTable
		{ after(grammarAccess.getSelectionAccess().getObjectsTableParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection__ObjectsAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectionAccess().getObjectsTableParserRuleCall_4_1_0()); }
		ruleTable
		{ after(grammarAccess.getSelectionAccess().getObjectsTableParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Selection__ClausesAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectionAccess().getClausesClauseParserRuleCall_5_0()); }
		ruleClause
		{ after(grammarAccess.getSelectionAccess().getClausesClauseParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Creation__TypeAssignment_2_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreationAccess().getTypeTABLEKeyword_2_0_0_0()); }
		(
			{ before(grammarAccess.getCreationAccess().getTypeTABLEKeyword_2_0_0_0()); }
			'TABLE'
			{ after(grammarAccess.getCreationAccess().getTypeTABLEKeyword_2_0_0_0()); }
		)
		{ after(grammarAccess.getCreationAccess().getTypeTABLEKeyword_2_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Creation__ObjectsAssignment_2_0_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreationAccess().getObjectsTableParserRuleCall_2_0_1_0()); }
		ruleTable
		{ after(grammarAccess.getCreationAccess().getObjectsTableParserRuleCall_2_0_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Creation__ConstaintsAssignment_2_0_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreationAccess().getConstaintsConstaintParserRuleCall_2_0_2_0_0()); }
		ruleConstaint
		{ after(grammarAccess.getCreationAccess().getConstaintsConstaintParserRuleCall_2_0_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Creation__ConstaintsAssignment_2_0_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreationAccess().getConstaintsConstaintParserRuleCall_2_0_2_1_1_0()); }
		ruleConstaint
		{ after(grammarAccess.getCreationAccess().getConstaintsConstaintParserRuleCall_2_0_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Creation__TypeAssignment_2_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreationAccess().getTypeINDEXKeyword_2_1_0_0()); }
		(
			{ before(grammarAccess.getCreationAccess().getTypeINDEXKeyword_2_1_0_0()); }
			'INDEX'
			{ after(grammarAccess.getCreationAccess().getTypeINDEXKeyword_2_1_0_0()); }
		)
		{ after(grammarAccess.getCreationAccess().getTypeINDEXKeyword_2_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Creation__ObjectsAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCreationAccess().getObjectsTableParserRuleCall_2_1_1_0()); }
		ruleTable
		{ after(grammarAccess.getCreationAccess().getObjectsTableParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__ObjectsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateAccess().getObjectsTableParserRuleCall_2_0()); }
		ruleTable
		{ after(grammarAccess.getUpdateAccess().getObjectsTableParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__ClausesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateAccess().getClausesClauseParserRuleCall_3_0()); }
		ruleClause
		{ after(grammarAccess.getUpdateAccess().getClausesClauseParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Update__ClausesAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getUpdateAccess().getClausesClauseParserRuleCall_4_1_0()); }
		ruleClause
		{ after(grammarAccess.getUpdateAccess().getClausesClauseParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Insertion__ObjectsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInsertionAccess().getObjectsTableParserRuleCall_3_0()); }
		ruleTable
		{ after(grammarAccess.getInsertionAccess().getObjectsTableParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Insertion__ValuesAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInsertionAccess().getValuesValueParserRuleCall_4_0()); }
		ruleValue
		{ after(grammarAccess.getInsertionAccess().getValuesValueParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Insertion__ValuesAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInsertionAccess().getValuesValueParserRuleCall_5_1_0()); }
		ruleValue
		{ after(grammarAccess.getInsertionAccess().getValuesValueParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__ObjectsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeleteAccess().getObjectsTableParserRuleCall_3_0()); }
		ruleTable
		{ after(grammarAccess.getDeleteAccess().getObjectsTableParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__ClausesAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeleteAccess().getClausesClauseParserRuleCall_4_0_0()); }
		ruleClause
		{ after(grammarAccess.getDeleteAccess().getClausesClauseParserRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Delete__ClausesAssignment_4_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDeleteAccess().getClausesClauseParserRuleCall_4_1_1_0()); }
		ruleClause
		{ after(grammarAccess.getDeleteAccess().getClausesClauseParserRuleCall_4_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableAccess().getNameEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getTableAccess().getNameEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__ColumnsAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableAccess().getColumnsColumnParserRuleCall_3_0_0()); }
		ruleColumn
		{ after(grammarAccess.getTableAccess().getColumnsColumnParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__ColumnsAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableAccess().getColumnsColumnParserRuleCall_3_1_1_0()); }
		ruleColumn
		{ after(grammarAccess.getTableAccess().getColumnsColumnParserRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColumnAccess().getNameEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getColumnAccess().getNameEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColumnAccess().getTypeTypeCrossReference_2_0()); }
		(
			{ before(grammarAccess.getColumnAccess().getTypeTypeEStringParserRuleCall_2_0_1()); }
			ruleEString
			{ after(grammarAccess.getColumnAccess().getTypeTypeEStringParserRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getColumnAccess().getTypeTypeCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClauseAccess().getNameAlternatives_0_0()); }
		(rule__Clause__NameAlternatives_0_0)
		{ after(grammarAccess.getClauseAccess().getNameAlternatives_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Clause__BodyAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClauseAccess().getBodyComplexStringParserRuleCall_1_0()); }
		ruleComplexString
		{ after(grammarAccess.getClauseAccess().getBodyComplexStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constaint__BodyAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstaintAccess().getBodyComplexStringParserRuleCall_1_0()); }
		ruleComplexString
		{ after(grammarAccess.getConstaintAccess().getBodyComplexStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__ColumnvaluesAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getColumnvaluesColumnValueParserRuleCall_3_0_0()); }
		ruleColumnValue
		{ after(grammarAccess.getValueAccess().getColumnvaluesColumnValueParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__ColumnvaluesAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getValueAccess().getColumnvaluesColumnValueParserRuleCall_3_1_1_0()); }
		ruleColumnValue
		{ after(grammarAccess.getValueAccess().getColumnvaluesColumnValueParserRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnValue__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColumnValueAccess().getValueEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getColumnValueAccess().getValueEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
